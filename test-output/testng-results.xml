<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="6" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-08-11T10:10:50 CEST" name="Default suite" finished-at="2024-08-11T10:11:40 CEST" duration-ms="49960">
    <groups>
      <group name="LoginErrorHandling">
        <method signature="LoginRegressionTest.ValidLoginCredentials(java.util.HashMap)[pri:0, instance:groupmart.Tests.LoginRegressionTest@4d1c005e]" name="ValidLoginCredentials" class="groupmart.Tests.LoginRegressionTest"/>
        <method signature="LoginRegressionTest.emptyEmailandPasswordField()[pri:0, instance:groupmart.Tests.LoginRegressionTest@4d1c005e]" name="emptyEmailandPasswordField" class="groupmart.Tests.LoginRegressionTest"/>
        <method signature="LoginRegressionTest.incompleteEmail(java.util.HashMap)[pri:0, instance:groupmart.Tests.LoginRegressionTest@4d1c005e]" name="incompleteEmail" class="groupmart.Tests.LoginRegressionTest"/>
        <method signature="LoginRegressionTest.incorrectEmail(java.util.HashMap)[pri:0, instance:groupmart.Tests.LoginRegressionTest@4d1c005e]" name="incorrectEmail" class="groupmart.Tests.LoginRegressionTest"/>
        <method signature="LoginRegressionTest.incorrectLoginErrorValidation(java.util.HashMap)[pri:0, instance:groupmart.Tests.LoginRegressionTest@4d1c005e]" name="incorrectLoginErrorValidation" class="groupmart.Tests.LoginRegressionTest"/>
        <method signature="LoginRegressionTest.incorrectPassword(java.util.HashMap)[pri:0, instance:groupmart.Tests.LoginRegressionTest@4d1c005e]" name="incorrectPassword" class="groupmart.Tests.LoginRegressionTest"/>
      </group> <!-- LoginErrorHandling -->
      <group name="LoginRegression">
        <method signature="LoginRegressionTest.ValidLoginCredentials(java.util.HashMap)[pri:0, instance:groupmart.Tests.LoginRegressionTest@4d1c005e]" name="ValidLoginCredentials" class="groupmart.Tests.LoginRegressionTest"/>
        <method signature="LoginRegressionTest.emptyEmailandPasswordField()[pri:0, instance:groupmart.Tests.LoginRegressionTest@4d1c005e]" name="emptyEmailandPasswordField" class="groupmart.Tests.LoginRegressionTest"/>
        <method signature="LoginRegressionTest.incompleteEmail(java.util.HashMap)[pri:0, instance:groupmart.Tests.LoginRegressionTest@4d1c005e]" name="incompleteEmail" class="groupmart.Tests.LoginRegressionTest"/>
        <method signature="LoginRegressionTest.incorrectEmail(java.util.HashMap)[pri:0, instance:groupmart.Tests.LoginRegressionTest@4d1c005e]" name="incorrectEmail" class="groupmart.Tests.LoginRegressionTest"/>
        <method signature="LoginRegressionTest.incorrectLoginErrorValidation(java.util.HashMap)[pri:0, instance:groupmart.Tests.LoginRegressionTest@4d1c005e]" name="incorrectLoginErrorValidation" class="groupmart.Tests.LoginRegressionTest"/>
        <method signature="LoginRegressionTest.incorrectPassword(java.util.HashMap)[pri:0, instance:groupmart.Tests.LoginRegressionTest@4d1c005e]" name="incorrectPassword" class="groupmart.Tests.LoginRegressionTest"/>
      </group> <!-- LoginRegression -->
    </groups>
    <test started-at="2024-08-11T10:10:50 CEST" name="Default test" finished-at="2024-08-11T10:11:40 CEST" duration-ms="49960">
      <class name="groupmart.Tests.LoginRegressionTest">
        <test-method is-config="true" signature="launchApp()[pri:0, instance:groupmart.Tests.LoginRegressionTest@4d1c005e]" started-at="2024-08-11T10:10:51 CEST" name="launchApp" finished-at="2024-08-11T10:11:00 CEST" duration-ms="8970" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="ValidLoginCredentials(java.util.HashMap)[pri:0, instance:groupmart.Tests.LoginRegressionTest@4d1c005e]" started-at="2024-08-11T10:11:00 CEST" name="ValidLoginCredentials" data-provider="getData" finished-at="2024-08-11T10:11:01 CEST" duration-ms="999" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{invalidPassword=passcode, validEmail=abc+2@jmail.com, validPassword=Angoli1@, invalidEmail=abc_123@example.com, incompleteEmail=abc+2@}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidLoginCredentials -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:groupmart.Tests.LoginRegressionTest@4d1c005e]" started-at="2024-08-11T10:11:01 CEST" name="teardown" finished-at="2024-08-11T10:11:01 CEST" duration-ms="389" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:groupmart.Tests.LoginRegressionTest@4d1c005e]" started-at="2024-08-11T10:11:01 CEST" name="launchApp" finished-at="2024-08-11T10:11:08 CEST" duration-ms="6267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="emptyEmailandPasswordField()[pri:0, instance:groupmart.Tests.LoginRegressionTest@4d1c005e]" started-at="2024-08-11T10:11:08 CEST" name="emptyEmailandPasswordField" finished-at="2024-08-11T10:11:08 CEST" duration-ms="677" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptyEmailandPasswordField -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:groupmart.Tests.LoginRegressionTest@4d1c005e]" started-at="2024-08-11T10:11:08 CEST" name="teardown" finished-at="2024-08-11T10:11:09 CEST" duration-ms="357" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:groupmart.Tests.LoginRegressionTest@4d1c005e]" started-at="2024-08-11T10:11:09 CEST" name="launchApp" finished-at="2024-08-11T10:11:15 CEST" duration-ms="6434" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="incompleteEmail(java.util.HashMap)[pri:0, instance:groupmart.Tests.LoginRegressionTest@4d1c005e]" started-at="2024-08-11T10:11:15 CEST" name="incompleteEmail" data-provider="getData" finished-at="2024-08-11T10:11:16 CEST" duration-ms="624" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{invalidPassword=passcode, validEmail=abc+2@jmail.com, validPassword=Angoli1@, invalidEmail=abc_123@example.com, incompleteEmail=abc+2@}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- incompleteEmail -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:groupmart.Tests.LoginRegressionTest@4d1c005e]" started-at="2024-08-11T10:11:16 CEST" name="teardown" finished-at="2024-08-11T10:11:16 CEST" duration-ms="366" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:groupmart.Tests.LoginRegressionTest@4d1c005e]" started-at="2024-08-11T10:11:16 CEST" name="launchApp" finished-at="2024-08-11T10:11:23 CEST" duration-ms="6992" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="incorrectEmail(java.util.HashMap)[pri:0, instance:groupmart.Tests.LoginRegressionTest@4d1c005e]" started-at="2024-08-11T10:11:23 CEST" name="incorrectEmail" data-provider="getData" finished-at="2024-08-11T10:11:24 CEST" duration-ms="787" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{invalidPassword=passcode, validEmail=abc+2@jmail.com, validPassword=Angoli1@, invalidEmail=abc_123@example.com, incompleteEmail=abc+2@}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- incorrectEmail -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:groupmart.Tests.LoginRegressionTest@4d1c005e]" started-at="2024-08-11T10:11:24 CEST" name="teardown" finished-at="2024-08-11T10:11:24 CEST" duration-ms="351" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:groupmart.Tests.LoginRegressionTest@4d1c005e]" started-at="2024-08-11T10:11:24 CEST" name="launchApp" finished-at="2024-08-11T10:11:32 CEST" duration-ms="7288" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="incorrectLoginErrorValidation(java.util.HashMap)[pri:0, instance:groupmart.Tests.LoginRegressionTest@4d1c005e]" started-at="2024-08-11T10:11:32 CEST" name="incorrectLoginErrorValidation" data-provider="getData" finished-at="2024-08-11T10:11:32 CEST" duration-ms="854" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{invalidPassword=passcode, validEmail=abc+2@jmail.com, validPassword=Angoli1@, invalidEmail=abc_123@example.com, incompleteEmail=abc+2@}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- incorrectLoginErrorValidation -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:groupmart.Tests.LoginRegressionTest@4d1c005e]" started-at="2024-08-11T10:11:32 CEST" name="teardown" finished-at="2024-08-11T10:11:33 CEST" duration-ms="357" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:groupmart.Tests.LoginRegressionTest@4d1c005e]" started-at="2024-08-11T10:11:33 CEST" name="launchApp" finished-at="2024-08-11T10:11:39 CEST" duration-ms="6204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="incorrectPassword(java.util.HashMap)[pri:0, instance:groupmart.Tests.LoginRegressionTest@4d1c005e]" started-at="2024-08-11T10:11:39 CEST" name="incorrectPassword" data-provider="getData" finished-at="2024-08-11T10:11:40 CEST" duration-ms="942" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{invalidPassword=passcode, validEmail=abc+2@jmail.com, validPassword=Angoli1@, invalidEmail=abc_123@example.com, incompleteEmail=abc+2@}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- incorrectPassword -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:groupmart.Tests.LoginRegressionTest@4d1c005e]" started-at="2024-08-11T10:11:40 CEST" name="teardown" finished-at="2024-08-11T10:11:40 CEST" duration-ms="385" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="dataCleaning()[pri:0, instance:groupmart.Tests.LoginRegressionTest@4d1c005e]" started-at="2024-08-11T10:11:40 CEST" name="dataCleaning" finished-at="2024-08-11T10:11:40 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dataCleaning -->
      </class> <!-- groupmart.Tests.LoginRegressionTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
